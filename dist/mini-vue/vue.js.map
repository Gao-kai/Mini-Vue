{"version":3,"file":"vue.js","sources":["../../src/observer/dep.js","../../src/observer/index.js","../../src/observer/proxy.js","../../src/init/initData.js","../../src/observer/nextTick.js","../../src/observer/watcher.js","../../src/init/initComputed.js","../../src/init/initState.js","../../src/template-compiler/tagRegs.js","../../src/template-compiler/htmlParser.js","../../src/template-compiler/index.js","../../src/lifecycle/index.js","../../src/globalApi/strats.js","../../src/globalApi/mergeOptions.js","../../src/init/init.js","../../src/vNode/index.js","../../src/lifecycle/initLifeCycle.js","../../src/globalApi/index.js","../../src/index.js"],"sourcesContent":["let id = 0;\r\n// 属性的dep核心目的：收集watcher 也称之为属性的收集器\r\nclass Dep {\r\n\tconstructor() {\r\n\t    this.id = id++; \r\n\t    this.subs = []; // 存放着当前属性对应的watcher都有哪些\r\n\t}\r\n\t\r\n\t/**\r\n\t * \r\n\t * @param {Object} watcher\r\n\t */\r\n\tdepend(){\r\n\t\t// 让watcher先记住dep 比直接push实现去重 Dep.target永远指向当前dep要收集的watcher this就是dep\r\n\t\tDep.target.addDep(this);\r\n\t\t\r\n\t\t// 直接在这里无脑push 不会去重\r\n\t\t// this.subs.push(watcher);\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * @param {Object} watcher\r\n\t * 给属性的dep收集器记录收集了多少个watcher\r\n\t * 其实就是记录这个属性有多少个组件模板在引用\r\n\t */\r\n\taddSub(watcher){\r\n\t\t this.subs.push(watcher);\r\n\t}\r\n\t\r\n\t/**\r\n\t * 通知当前dep收集的watcher更新视图\r\n\t */\r\n\tnotify(){\r\n\t\tthis.subs.forEach(watcher=>{\r\n\t\t\twatcher.update();\r\n\t\t})\r\n\t}\r\n}\r\n\r\n// 给Dep挂载一个全局属性 暴露出去 初始值为null 就是一个全局变量 代指当前正在\r\nDep.target = null;\r\n\r\n// 存放渲染watcher和计算watcher的栈\r\nlet stack = [];\r\n// 入栈\r\nexport function pushTarget(watcher){\r\n\tstack.push(watcher);\r\n\tDep.target = watcher;\r\n}\r\n// 出栈\r\nexport function popTarget(){\r\n\tstack.pop();\r\n\tDep.target = stack[stack.length-1];\r\n}\r\n\r\n\r\nexport default Dep;","import Dep from './dep.js'\r\n\r\n// 传递过来的是data引用空间\r\nexport function observe(data) {\r\n\tif (typeof data !== 'object' || data === null) return;\r\n\t// 如果一个对象的__ob__属性存在并且是Observer的实例 那么说明这个对象已经被观测过了\r\n\tif (data.__ob__ instanceof Observer) {\r\n\t\treturn data.__ob__;\r\n\t}\r\n\treturn new Observer(data);\r\n}\r\n\r\n// 观测数组和对象的类\r\nclass Observer {\r\n\tconstructor(data) {\r\n\t\t// 让__ob__属性的可被遍历属性设置为false\r\n\t\tObject.defineProperty(data, '__ob__', {\r\n\t\t\tvalue: this,\r\n\t\t\tenumrable: false,\r\n\t\t\tconfigurable: false\r\n\t\t})\r\n\r\n\t\tif (Array.isArray(data)) {\r\n\t\t\tlet newArrayProto = createNewArrayProto();\r\n\t\t\tdata.__proto__ = newArrayProto;\r\n\t\t\t// 会将数组中的对象的属性进行劫持\r\n\t\t\tthis.observeArray(data);\r\n\t\t} else {\r\n\t\t\tthis.walk(data);\r\n\t\t}\r\n\t}\r\n\r\n\twalk(data) {\r\n\t\tObject.keys(data).forEach(key => {\r\n\t\t\t// 单独定义  公共 方便导出 不放在类上\r\n\t\t\tdefineReactive(data, key, data[key]);\r\n\t\t})\r\n\t}\r\n\r\n\tobserveArray(data) {\r\n\t\tdata.forEach(item => {\r\n\t\t\tobserve(item);\r\n\t\t})\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction defineReactive(target, key, value) {\r\n\t// 递归劫持 如果对象的属性值还是一个对象\r\n\tobserve(value);\r\n\t/**\r\n\t * 每一个属性在defineProperty前都有一个独立的dep\r\n\t * 这个dep由于和defineProperty中的get方法形成闭包\r\n\t * 不会被垃圾回收所销毁\r\n\t */\r\n\tlet dep = new Dep();\r\n\t\r\n\tObject.defineProperty(target, key, {\r\n\t\t// 拦截取值操作\r\n\t\tget() {\r\n\t\t\tconsole.log('取值操作', key, value);\r\n\t\t\t\r\n\t\t\t// 属性的收集器dep 进行依赖收集\r\n\t\t\tif(Dep.target){\r\n\t\t\t\tdep.depend(Dep.target);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\t// 拦截赋值操作\r\n\t\tset(newValue) {\r\n\t\t\tconsole.log('存值操作', key, value);\r\n\t\t\tif (newValue === value) return;\r\n\t\t\t// 如果新赋的值是一个新的对象 还需要劫持\r\n\t\t\tobserve(newValue);\r\n\t\t\tvalue = newValue;\r\n\t\t\t\r\n\t\t\t// 响应式属性值变化 通知此属性dep收集到的watcher更新视图\r\n\t\t\tdep.notify();\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\nfunction createNewArrayProto() {\r\n\tlet oldArrayProto = Array.prototype;\r\n\tlet newArrayProto = Object.create(oldArrayProto);\r\n\r\n\t// 以下7个方法会改变原数组\r\n\tlet methods = [\r\n\t\t'push',\r\n\t\t'pop',\r\n\t\t'shift',\r\n\t\t'unshift',\r\n\t\t'sort',\r\n\t\t'reverse',\r\n\t\t'splice'\r\n\t]\r\n\r\n\tmethods.forEach(method => {\r\n\t\tnewArrayProto[method] = function(...args) {\r\n\t\t\tconsole.log('监听到调用了数组方法', method);\r\n\t\t\tlet result = oldArrayProto[method].call(this, ...args);\r\n\r\n\t\t\t// 需要对操作数组方法的时候新增的数据 再次进行劫持\r\n\t\t\tlet inserted;\r\n\t\t\tswitch (method) {\r\n\t\t\t\tcase 'push':\r\n\t\t\t\tcase 'unshift':\r\n\t\t\t\t\tinserted = args;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'splice':\r\n\t\t\t\t\tinserted = args.slice(2);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tconsole.log('inserted', inserted);\r\n\r\n\t\t\tif (inserted) {\r\n\t\t\t\t// 对新增的内容再次进行劫持\r\n\t\t\t\tthis.__ob__.observeArray(inserted);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\t})\r\n\r\n\treturn newArrayProto;\r\n}\n","// 将target对象上的所有\r\n/**\r\n * @param {Object} vm Vue实例对象\r\n * @param {Object} target 要代理的vm上的目标对象_data = {}\r\n * @param {Object} key 目标对象的属性 name\r\n * 实现访问vm.name = 访问vm._data.name\r\n */\r\nexport function proxy(vm, target, key) {\r\n\tObject.defineProperty(vm, key, {\r\n\t\tget() {\r\n\t\t\treturn vm[target][key];\r\n\t\t},\r\n\t\tset(newValue) {\r\n\t\t\tvm[target][key] = newValue;\r\n\t\t}\r\n\t})\r\n}","import {observe} from '../observer/index.js'\r\nimport {proxy} from '../observer/proxy.js'\r\n\r\n/**\r\n * 1. 获取数据\r\n * 2. 对获取到的data进行响应式处理\r\n */\r\nexport function initData(vm) {\r\n\r\n\tlet data = vm.$options.data;\r\n\tdata = typeof data === 'function' ? data.call(vm) : data;\r\n\r\n\t// 将要劫持的对象放在实例上 便于观测效果\r\n\tvm._data = data;\r\n\tobserve(data);\r\n\r\n\t// 数据代理\r\n\tfor (let key in data) {\r\n\t\tproxy(vm, '_data', key);\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n","let timerFunction;\r\n// nextTick处理异步刷新的优雅降级\r\nfunction getTimerFn(fn){\r\n\tif(Promise){\r\n\t\ttimerFunction = ()=>{\r\n\t\t\tPromise.resolve().then(flashCallBacks);\r\n\t\t}\r\n\t}else if(MutationObserver){\r\n\t\t// 这里传入的回调是异步回调 当DOM元素属性变化的时候触发flashCallBacks\r\n\t\tlet mutationOb = new MutationObserver(flashCallBacks);\r\n\t\tlet textNode = document.createTextNode(1);\r\n\t\tmutationOb.observe(textNode,{\r\n\t\t\tcharacterData:true\r\n\t\t})\r\n\t\ttimerFunction = ()=>{\r\n\t\t\ttextNode.textContent = 2;\r\n\t\t}\r\n\t}else if(setImmediate){\r\n\t\ttimerFunction = ()=>{\r\n\t\t\tsetImmediate(flashCallBacks);\r\n\t\t}\r\n\t}else{\r\n\t\ttimerFunction = ()=>{\r\n\t\t\tsetTimeout(flashCallBacks,0);\r\n\t\t}\r\n\t}\r\n}\r\ngetTimerFn();\r\n\r\n/**\r\n * @param {Object} callback 回调函数\r\n * 异步批处理:多次操作执行一次\r\n */\r\nfunction flashCallBacks(){\r\n\tlet flushCallBacks = callBacks.slice(0);\r\n\t\r\n\t// 清空队列和memo对象以及pending默认值\r\n\tcallBacks = [];\r\n\twaiting = false\r\n\t\r\n\t// 从保存watcher的队列中依次取出更新视图\r\n\tflushCallBacks.forEach(cb=>{\r\n\t\tcb();\r\n\t});\r\n}\r\n\r\nlet callBacks = [];\r\nlet waiting = false;\r\nexport function nextTick(callback){\r\n\t// 维护所有来自内部和外部的callback 这是同步操作\r\n\tcallBacks.push(callback);\r\n\t\r\n\tif(!waiting){\r\n\t\t// 这是异步操作 最后将所有任务一起刷新\r\n\t\t// setTimeout(()=>{\r\n\t\t// \tflashCallBacks();\r\n\t\t// },0)\r\n\t\ttimerFunction(flashCallBacks);\r\n\t\twaiting = true;\r\n\t}\r\n}\r\n\r\n","import Dep from './dep.js'\r\nimport { nextTick } from './nextTick.js';\r\nimport { pushTarget,popTarget } from './dep.js';\r\n\r\nlet id = 0;\r\nclass Watcher {\r\n\t/**\r\n\t * @param {Object} vm 实例\r\n\t * @param {Object} fn 当实例上属性的getter触发的时候要执行的逻辑 \r\n\t * @param {Object} options 标识是否为渲染watcher或者lazy执行fn的watcher\r\n\t * 当watcher实例是一个渲染watcher的时候，fn就是_render和_update意味着要更新视图\r\n\t * 当watcher实例是一个计算watcher的时候，fn就是计算属性自身的getter，要设置缓存memorize\r\n\t */\r\n\tconstructor(vm, fn, options) {\r\n\t\tthis.id = id++; // 创建组件唯一的watcher\r\n\t\tthis.getter = fn; // getter意味着调用函数可以发生取值操作\r\n\t\tthis.renderWatcher = options.renderWatcher; // 标识是否为渲染watcher\r\n\t\tthis.vm = vm;\r\n\t\t/**\r\n\t\t * 记录当前这个组件watcher实例上观察了多少个属性，目的：\r\n\t\t * 1.实现computed计算属性\r\n\t\t * 2.组件卸载之后需要将当前组件watcher绑定的所有dep释放\r\n\t\t * 3.watcher和dep是多对多的关系\r\n\t\t */\r\n\t\tthis.deps = []; \r\n\t\t\r\n\t\t// 记录当前watcher绑定的dep的id数组 实现去重操作\r\n\t\tthis.depsId = new Set();\r\n\t\t\r\n\t\t// 计算属性的getter被触发后先不执行 先看下值是否被修改(变脏)\r\n\t\t// 如果已经被修改，那么执行getter;否则返回上一次缓存的结果\r\n\t\t/**\r\n\t\t * 1. 如果options.lazy为true 代表传入的fn不立即执行，否则才需要执行fn也就是get\r\n\t\t * 2. 多次取值用dirty进行控制\r\n\t\t */\r\n\t\tthis.lazy = options.lazy;\r\n\t\tthis.lazy ? null : this.get();\r\n\t\tthis.dirty = options.lazy;\r\n\t}\r\n\t\r\n\t\r\n\tevaluate(){\r\n\t\t// 执行watcher的get就等于执行getter方法也就是用户传入的fn，对于计算属性来说fn就是用户定义的userDefine，在这里拿到用户传入的计算属性的get函数的返回值，并且需要标识为脏\r\n\t\tthis.value = this.get();\r\n\t\tthis.dirty = false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * 让计算属性watcher也收集渲染watcher\r\n\t */\r\n\tdepend(){\r\n\t\tlet depLen = this.deps.length;\r\n\t\twhile(depLen--){\r\n\t\t\tthis.deps[depLen].depend();\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * @param {Object} dep 属性的收集器\r\n\t * 给watcher记录关联了多少个属性dep\r\n\t * \r\n\t * 注意：重复的属性也不用重复push记录，因为一个watcher组件模板中可能绑定了多个重复的属性，比如一个组件模板多个地方用到属性name这是很常见的\r\n\t */\r\n\taddDep(dep){\r\n\t\tlet depId = dep.id;\r\n\t\t// 使用set实现watcher关联的属性dep 去重 避免同一属性重复watcher重复关联\r\n\t\tif(!this.depsId.has(depId)){\r\n\t\t\t\r\n\t\t\t// 先让watcher记住其关联的dep\r\n\t\t\tthis.deps.push(dep);\r\n\t\t\t\r\n\t\t\t// 为了下次depsId可以进行去重判断\r\n\t\t\tthis.depsId.add(depId);\r\n\t\t\t\r\n\t\t\t// 最后才让dep记住其关联的watcher 这个this是watcher\r\n\t\t\tdep.addSub(this);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\r\n\tget() {\r\n\t\t// 给Dep类的静态属性target赋值\r\n\t\t// Dep.target = this;\r\n\t\tpushTarget(this);\r\n\r\n\t\t/**\r\n\t\t * 1.执行getter就等于执行组件new Watcher的时候传递进来的渲染逻辑函数中的_render\r\n\t\t * 2.就等于执行$options.render.call(vm)\r\n\t\t * 3.就等于去vm上获取模板中变量vm.name和vm.age的值\r\n\t\t * 4.就会触发绑定在模板上属性defineProperty的get方法\r\n\t\t */\r\n\t\tlet value = this.getter.call(this.vm);\r\n\t\t\r\n\t\t// 渲染完成之后将Dep.target设置为null\r\n\t\tpopTarget();\r\n\t\t// Dep.target = null;\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * watcher组件更新视图 \r\n\t * 如果同一个组件A模板中绑定的name和age属性值都发生了set操作\r\n\t * 那么原本直接执行watcher的get方法会触发两次视图渲染\r\n\t * 这里设计一个队列将watcher都缓存起来 只更新一次 避免性能浪费\r\n\t */\r\n\tupdate(){\r\n\t\t// 如果是计算属性有lazy标识 计算属性依赖的值变化就标识dirty属性为脏\r\n\t\tif(this.lazy){\r\n\t\t\tthis.dirty = true;\r\n\t\t}else{\r\n\t\t\t// 先不直接更新watcher的视图 而是将要更新视图的watcher暂存到队列中\r\n\t\t\tqueneWatcher(this);\r\n\t\t}\r\n\t\t\r\n\t\r\n\t}\r\n\t\r\n\trun(){\r\n\t\t// 真正执行视图渲染的地方\r\n\t\tthis.get();\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n * 1. 同一组件\r\n * 假设A组件绑定了name和age，此时给name和age赋值触发两次setter，原本要更新A组件两次，现在我们要让它只更新一次视图\r\n * \r\n * 2. 多个组件\r\n * age属性不只依赖A组件，还依赖于B组件，当age连着两次赋值之后，此时原本A组件和B组件都要更新2次，现在我们要让A和B组件都各更新一次即可\r\n * \r\n * 3.queneWatcher的作用\r\n * 不管watcher的update方法走了多少次，最后的更新操作只进行一次，那么就要设置一个锁，在第一次代码执行的时候关锁，不让后续的代码触发这个更新操作\r\n */\r\nlet quene = []; // 缓存数组 存放的watcher在后续都会执行一次刷新操作\r\nlet memo = {}; // 去重\r\nlet pending = false; // 防抖\r\nfunction queneWatcher(watcher){\r\n\tconst watcherId = watcher.id;\r\n\t\r\n\t// watcher去重\r\n\tif(!memo[watcherId]){\r\n\t\tquene.push(watcher);\r\n\t\tmemo[watcherId] = true;\r\n\t\tconsole.log(quene);\r\n\t\t\r\n\t\t/**\r\n\t\t * 不管此方法执行多少次 最终的视图刷新操作只执行一次 \r\n\t\t * 为什么要将刷新的操作写在异步代码中呢 \r\n\t\t * 就是为了利用事件环的机制 \r\n\t\t * 让此异步代码等到前面的所有同步代码执行完成之后再执行 \r\n\t\t * 也就实现了多次属性值修改只执行一次更新的操作\r\n\t\t */\r\n\t\tif(!pending){\r\n\t\t\t// setTimeout(flushSchedulerQuene,0)\r\n\t\t\tnextTick(flushSchedulerQuene);\r\n\t\t\tpending = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * 把缓存在队列中的watcher拿出来 \r\n * 依次执行其更新视图操作\r\n */\r\nfunction flushSchedulerQuene(){\r\n\tconsole.log('执行异步批量渲染');\r\n\t// 浅克隆一份\r\n\tlet flushWatcherQuene = quene.slice(0);\r\n\t\r\n\t// 清空队列和memo对象以及pending默认值\r\n\tquene = []; // 保证在刷新的过程中有新的watcher重新放入队列中\r\n\tmemo = {};\r\n\tpending = false\r\n\t\r\n\t// 从保存watcher的队列中依次取出更新视图\r\n\tflushWatcherQuene.forEach(watcher=>{\r\n\t\twatcher.run();\r\n\t});\r\n}\r\n\r\n\r\nexport default Watcher;\n","import Watcher from '../observer/watcher.js';\r\nimport Dep from '../observer/dep.js'\r\n\r\n// 初始化用户传入的计算属性computed对象中的每一个属性\r\nexport function initComputed(vm) {\r\n\tlet computed = vm.$options.computed;\r\n\tconsole.log('computed',computed); // a:{} / a:fn(){}\r\n\t\r\n\t// 将watchers暴露在vm上 便于在其他方法中直接用vm实例获取\r\n\tlet watchers = vm._computedWatchers = {};\r\n\t\r\n\t// 循环遍历定义每一个计算属性\r\n\tfor(let key in computed){\r\n\t\tlet userDefine = computed[key];\r\n\t\t\r\n\t\t/**\r\n\t\t * 我们需要监控计算属性中get的变化\r\n\t\t * 1.一般情况下如果直接new Watcher就会立即执行fn \r\n\t\t * 2.这里加一个标识lazy标识在new Watcher的时候不要立即执行userDefine\r\n\t\t * 3.将计算属性key和Watcher一一对应起来\r\n\t\t */\r\n\t\tlet fn = typeof userDefine === 'function' ? userDefine : userDefine.get;\r\n\t\twatchers[key] = new Watcher(vm,fn,{lazy:true});\r\n\t\t\r\n\t\t// 这一步的目的是实现计算属性的响应式拦截 实现直接修改计算属性值引起视图重新渲染\r\n\t\tdefineComputed(vm,key,userDefine);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Object} vm \r\n * @param {Object} key 计算属性的key\r\n * @param {Object} userDefine 计算属性key对应的值，可能是一个函数或者一个对象\r\n * \r\n * defineComputed的作用：给vm实例上定义响应式属性\r\n */\r\nfunction defineComputed(vm,key,userDefine){\r\n\t// 根据用户传入的computed计算属性是函数或者对象取出getter或setter\r\n\tconst getter = typeof userDefine === 'function' ? userDefine : userDefine.get;\r\n\tconst setter = userDefine.set || (()=>{});\r\n\t\r\n\tconsole.log('获取计算属性的getter和setter',getter,setter);\r\n\t\r\n\t// 将用户传入的计算属性依次用Object.defineProperty进行get和set的重新绑定，好处在于这样一做之后在实例vm上可以直接获取到computed中的计算属性\r\n\tObject.defineProperty(vm,key,{\r\n\t\tget:createComputedGetter(key),\r\n\t\tset:setter\r\n\t})\r\n}\r\n\r\n// 计算属性本身和data中的属性不一样，它本身不会收集依赖，只会让自己依赖的属性去收集依赖\r\nfunction createComputedGetter(key){\r\n\t\r\n\treturn function(){\r\n\t\t// this就是vm 获取到对应计算属性key的watcher实例\r\n\t\tlet computedWatcher = this._computedWatchers[key];\r\n\t\t\r\n\t\t/**\r\n\t\t * 如果dirty为true 代表值是脏的发生了变化 就需要执行用户传入的函数\r\n\t\t * 并且只有第一次进行取值的时候computedWatcher.dirty为true可以执行fn\r\n\t\t * 执行过一次之后computedWatcher.dirty的值为false 后续每次执行都不会触发fn\r\n\t\t * \r\n\t\t */\r\n\t\tif(computedWatcher.dirty){\r\n\t\t\t// 求完值以后计算属性watcher就会出栈\r\n\t\t\tcomputedWatcher.evaluate();\r\n\t\t}\r\n\t\t\r\n\t\t// 说明计算属性watcher出栈后还有渲染watcher\r\n\t\tif(Dep.target){\r\n\t\t\t// 让计算属性watcher里面依赖的属性 也去收集上层watcher 实现计算属性依赖的属性变化了 不仅计算属性的值变化 渲染watcher也发生变化\r\n\t\t\tcomputedWatcher.depend();\r\n\t\t}\r\n\t\t\r\n\t\treturn computedWatcher.value;\r\n\t}\r\n\t\r\n}","import {initData} from './initData.js'\r\nimport {initComputed} from './initComputed.js'\r\n\r\n\r\nexport function initState(vm) {\r\n\tlet options = vm.$options; // 获取用户传入的选项\r\n\t\r\n\tif (options.props) {\r\n\t\tinitProps(vm);\r\n\t}\r\n\r\n\tif (options.data) {\r\n\t\tinitData(vm);\r\n\t}\r\n\r\n\tif (options.methods) {\r\n\t\tinitMethods(vm);\r\n\t}\r\n\r\n\tif (options.computed) {\r\n\t\tinitComputed(vm);\r\n\t}\r\n\r\n\tif (options.watch) {\r\n\t\tinitWatch(vm);\r\n\t}\r\n}\r\n\r\n","// 匹配解析正则表达式\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n/**\r\n * 正则startTagOpen用来匹配开始标签的名字\r\n * 1.以<开头\r\n * 2.标签名不能以数字开头，可以使用字母和下划线 <div 自定义标签<_demo\r\n * 3.除了标签名的首字母不可以是字符 第二位可使用数字 <h1\r\n * 4.考虑存在命名空间的标签比如 <namespace:div 虽然很少见\r\n * 5.此正则匹配到的分组是标签名组成的字符串\r\n */\r\nexport const startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n\r\n/**\r\n * 正则startTagClose用来匹配结束标签\r\n * 1.可以有一个/，比如单标签<br/>的结束/>\r\n * 2.可以没有/，比如正常标签的结束>\r\n */\r\nexport const startTagClose = /^\\s*(\\/?)>/;\r\n\r\n/**\r\n * 正则endTag用来匹配结束标签的名字\r\n * 1.以</开头\r\n * 2.匹配到的是</div的标签名组成的字符串\r\n */\r\nexport const endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n\r\n/**\r\n * 正则attribute用来匹配属性\r\n * 1. 属性的前面可以有空白字符，但是不能有特殊字符\r\n * 2. 匹配的属性可以是：color = \"xxx\"\r\n * 3. 匹配的属性可以是：color = 'yyy'\r\n * 4. 匹配的属性可以是：color = zzz\r\n * 5. 此正则匹配到的分组是1分组-属性key 3分组或4分组或5分组-属性value\r\n */\r\nexport const attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n\r\n/**\r\n * defaultTagReg匹配到的是{{xxx }} 表达式的变量xxx\r\n * \r\n */\r\nexport const defaultTagReg = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n","import {\r\n\tstartTagOpen,\r\n\tstartTagClose,\r\n\tendTag,\r\n\tattribute,\r\n\tdefaultTagReg\r\n} from './tagRegs.js'\r\n\r\nexport const ELEMENT_TYPE = 1;\r\nexport const TEXT_TYPE = 3;\r\n\r\n/**\r\n * 1. 解析html字符串的开头一定是< \r\n * 2. 解析html字符串的原则是每解析一个标签就从html中将其删除\r\n * 3. 直到html截取空了，此时模板就解析完成了\r\n * 4. Vue3.0支持直接在template中写字符串，Vue2.0不行\r\n * 5. 返回值是AST抽象语法树\r\n * \r\n */\r\nexport function parseHTML(htmlStr) {\r\n\r\n\t// 定义创建AST节点所需变量\r\n\tconst stack = [];\r\n\tlet currentParent; // 永远指向栈中最后一个元素的指针\r\n\tlet root;\r\n\r\n\t/**\r\n\t * 创建AST节点\r\n\t */\r\n\tfunction createASTElement(tag, attrs) {\r\n\t\treturn {\r\n\t\t\ttag,\r\n\t\t\ttype: ELEMENT_TYPE,\r\n\t\t\tattrs,\r\n\t\t\tparent: null,\r\n\t\t\tchildren: []\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Object} tagName\r\n\t * @param {Object} attrs\r\n\t * 根据正则匹配到的开始标签的tagName和attrs构建AST节点\r\n\t */\r\n\tfunction start(tagName, attrs) {\r\n\t\t// console.log(tagName, attrs, '开始标签');\r\n\r\n\t\tlet astNode = createASTElement(tagName, attrs);\r\n\t\t// 如果root为空 就是AST树的根节点\r\n\t\tif (!root) {\r\n\t\t\troot = astNode;\r\n\t\t}\r\n\r\n\t\tif (currentParent) {\r\n\t\t\tastNode.parent = currentParent;\r\n\t\t\tcurrentParent.children.push(astNode);\r\n\t\t}\r\n\r\n\t\tstack.push(astNode);\r\n\t\tcurrentParent = astNode; // currentParent指向栈中最后一个元素\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Object} tagName\r\n\t * 根据正则匹配到的结束标签的tagName构建AST节点\r\n\t */\r\n\tfunction end(tagName) {\r\n\t\t// console.log(tagName, '结束标签');\r\n\t\tlet astNode = stack.pop(); // 栈顶弹出最后一个 校验标签是否合法\r\n\t\tif (astNode.tag !== tagName) {\r\n\t\t\tconsole.error('标签不合法')\r\n\t\t}\r\n\t\tcurrentParent = stack[stack.length - 1]; // 重新指向栈中最后一个\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Object} text\r\n\t * 根据正则匹配到的文本text构建AST节点\r\n\t */\r\n\tfunction chars(text) {\r\n\t\t// console.log(text, '文本内容');\r\n\t\ttext = text.replace(/\\s/g, '') // 将多个空格替换为1个\r\n\t\t// 文本直接放到当前指向的节点的children下\r\n\t\ttext && currentParent.children.push({\r\n\t\t\ttext,\r\n\t\t\ttype: TEXT_TYPE,\r\n\t\t\tparent: currentParent\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * 将htmlStr从索引为n的地方截取到末尾 并返回截取后的htmlStr\r\n\t */\r\n\tfunction advance(n) {\r\n\t\thtmlStr = htmlStr.slice(n);\r\n\t}\r\n\r\n\t/**\r\n\t * 根据正则匹配解析开始标签\r\n\t */\r\n\tfunction parseStartTag() {\r\n\t\tconst start = htmlStr.match(startTagOpen);\r\n\t\t// console.log('匹配开始标签正则的结果', start);\r\n\r\n\t\tif (start) {\r\n\t\t\tconst match = {\r\n\t\t\t\ttagName: start[1], // 捕获到的是标签名\r\n\t\t\t\tattrs: []\r\n\t\t\t}\r\n\t\t\tadvance(start[0].length);\r\n\r\n\t\t\t// 只要不是开始标签的结束就一直匹配 同时记录属性\r\n\t\t\tlet attrResult;\r\n\t\t\tlet endResult;\r\n\t\t\twhile (!(endResult = htmlStr.match(startTagClose)) && (attrResult = htmlStr.match(attribute))) {\r\n\t\t\t\tadvance(attrResult[0].length);\r\n\t\t\t\tmatch.attrs.push({\r\n\t\t\t\t\tname: attrResult[1],\r\n\t\t\t\t\tvalue: attrResult[3] || attrResult[4] || attrResult[5] || true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// 处理结束标签\r\n\t\t\tif (endResult) {\r\n\t\t\t\tadvance(endResult[0].length);\r\n\t\t\t}\r\n\r\n\t\t\t// console.log('解析开始标签的结果', match, htmlStr);\r\n\t\t\treturn match;\r\n\t\t}\r\n\r\n\t\treturn false; // 说明不是开始标签\r\n\t}\r\n\r\n\r\n\t// 开始循环解析htmlStr模板字符串 直至htmlStr为空\r\n\twhile (htmlStr) {\r\n\t\t/**\r\n\t\t * 如何确定父子关系：基于栈模拟标签的顺序关系\r\n\t\t * 1. 遇到一个开始标签div，就先压入栈底【div】\r\n\t\t * 2. 再遇到一个开始标签比如p，就再压入栈，此时栈底的div就是p的父元素 【div p】\r\n\t\t * 3. 遇到一个结束标签</p>,就和栈顶进行匹配 如果匹配ok 就从栈中弹出【div p p】\r\n\t\t * 4. 知道全部解析完成 栈清空 说明标签匹配完了 【】\r\n\t\t */\r\n\r\n\t\tlet textEnd = htmlStr.indexOf('<')\r\n\t\t\r\n\t\t// 1.textEnd值为0 代表解析到了一个开始标签<div>或者结束标签</div>\r\n\t\tif (textEnd === 0) {\r\n\t\t\t// 解析到的开始标签的匹配结果\r\n\t\t\tconst startTagMatch = parseStartTag();\r\n\t\t\tif (startTagMatch) {\r\n\t\t\t\tstart(startTagMatch.tagName, startTagMatch.attrs);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t// 解析到的是结束标签\r\n\t\t\tconst endTagMatch = htmlStr.match(endTag);\r\n\t\t\tif (endTagMatch) {\r\n\t\t\t\tadvance(endTagMatch[0].length);\r\n\t\t\t\tend(endTagMatch[1])\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 2.textEnd值>0 代表解析到了文本结束的位置<div>文本</div>\r\n\t\tif (textEnd > 0) {\r\n\t\t\t// 解析到的文本结果\r\n\t\t\tlet text = htmlStr.slice(0, textEnd);\r\n\t\t\tif (text) {\r\n\t\t\t\tchars(text);\r\n\t\t\t\tadvance(text.length);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// console.log('root', root);\r\n\treturn root;\r\n}\n","import {\r\n\tparseHTML,\r\n\tELEMENT_TYPE,\r\n\tTEXT_TYPE\r\n} from './htmlParser.js'\r\n\r\nimport {\r\n\tdefaultTagReg\r\n} from './tagRegs.js'\r\n/**\r\n * Vue 2.0 模板编译\r\n * @param {Object} template 需要被编译的模板\r\n * @return {function} render 生成的render方法\r\n * \r\n * 1. 将传入的template转化成为AST抽象语法树\r\n * 2. 生成render方法\r\n * 3. 执行render方法的返回值就是虚拟DOM\r\n * 4. 将虚拟DOM转化为真实DOM\r\n */\r\nexport function compileToFunction(template) {\r\n\t/*\r\n\t\t第一步：生成AST抽象语法树\r\n\t\t{\r\n\t\t\ttag:\"div\",\r\n\t\t\ttype:1,\r\n\t\t\tattrs:[{name:'lilei',age:'18'}],\r\n\t\t\tparent:null,\r\n\t\t\tchildren:[\r\n\t\t\t\t{\r\n\t\t\t\t\ttag:\"div\",\r\n\t\t\t\t\ttype:1,\r\n\t\t\t\t\tattrs:[{name:'lilei',age:'18'}],\r\n\t\t\t\t\tparent:,\r\n\t\t\t\t\tchildren:[...]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t*/\r\n\tlet ast = parseHTML(template);\r\n\r\n\t/* \r\n\t\t第二步：基于ast语法树拼接生成需要的代码字符串\r\n\t\trender方法，render方法执行后返回的结果就是虚拟DOM\r\n\t\t实现c v s函数\r\n\t */\r\n\tlet code = codeGenerator(ast);\r\n\t\r\n\tcode = `with(this){\r\n\t\treturn ${code};\r\n\t}`\r\n\t\r\n\t\r\n\t\r\n\t/* \r\n\t\t第三步：如何将代码字符串执行呢\r\n\t\tnew Function语法：\r\n\t\t只传递一个参数，那么会返回一个匿名的函数，函数体就是参数\r\n\t\tnew Function(functionBody)\r\n\t\t\r\n\t\t传递多个参数，前面的参数都是函数的形参，最后一个参数是函数体\r\n\t\tnew Function(arg0, functionBody)\r\n\t\tnew Function(arg0, arg1, functionBody)\r\n\t\tnew Function(arg0, arg1, ..., argN, functionBody)\r\n\t\t\r\n\t\tnew Funtion生成的函数只能在全局作用域中运行，在调用该函数的时候只能访问全局变量和自己局部变量\r\n\t\tlet x = 100;\r\n\t\tfunction demo(){\r\n\t\t\tlet x = 100;\r\n\t\t\treturn new Function('console.log(x)')\r\n\t\t}\r\n\t\t\r\n\t\tlet f = demo();\r\n\t\tf();// 100 因为只能访问全局的变量\r\n\t\t\r\n\t */\r\n\t\r\n\tlet render = new Function(code);\r\n\t// console.log('render函数',render)\r\n\t\r\n\t/* 执行render函数 用call绑定this */\r\n\r\n\t// render() {\r\n\t// \treturn _c('div', {\r\n\t// \t\tid: 'app'\r\n\t// \t}, _c('div', {\r\n\t// \t\tstyle: {\r\n\t// \t\t\tcolor: 'red'\r\n\t// \t\t}\r\n\t// \t}, _v('姓名：' + _s(name)),_c('p',null,_v('年龄：' + _s(age)))))\r\n\t// }\r\n\t// c创建元素的 v创建文本的 s是stringify\r\n\r\n\treturn render;\r\n\r\n}\r\n\r\nfunction codeGenerator(astNode) {\r\n\t// let attrsCode = generatorProps(astNode.attrs);\r\n\tlet childrenCode = generatorChildren(astNode.children);\r\n\t// console.log('childrenCode',childrenCode);\r\n\tlet code =\r\n\t\t`_c('${astNode.tag}',${ astNode.attrs.length ? generatorProps(astNode.attrs):'null'}${ astNode.children.length ? `,${childrenCode}`:''})`;\r\n\r\n\t// console.log('code', code);\r\n\treturn code;\r\n}\r\n\r\nfunction generatorChildren(children) {\r\n\tif(children){\r\n\t\treturn children.map(child => generatorChild(child)).join(',')\r\n\t}\r\n}\r\n\r\nfunction generatorChild(astNode) {\r\n\r\n\t// 元素 生成元素\r\n\tif (astNode.type === ELEMENT_TYPE) {\r\n\t\treturn codeGenerator(astNode);\r\n\t}\r\n\r\n\t// 文本 创建文本\r\n\t/**\r\n\t * 1. 纯文本\r\n\t * eg:hahah ===> re:`_v(hahah)`\r\n\t * \r\n\t * 2. {{name}}\r\n\t * 3. {{name}} + '纯文本' + {{age}}\r\n\t * \r\n\t * eg:{{name}} hahah {{ age}} ===> re:`_v(_s(name) + hahah + _s(age))`\r\n\t * \r\n\t */\r\n\tif (astNode.type === TEXT_TYPE) {\r\n\t\tlet text = astNode.text;\r\n\t\tif (!defaultTagReg.test(text)) {\r\n\t\t\t// 说明是纯文本\r\n\t\t\treturn `_v(${JSON.stringify(text)})`\r\n\t\t} else {\r\n\t\t\t// 说明文本中包含一个或多个表达式文本\r\n\t\t\tlet tokens = [];\r\n\t\t\tlet match;\r\n\t\t\tlet lastIndex = 0;\r\n\t\t\t// 重置下正则的lastIndex属性为0\r\n\t\t\tdefaultTagReg.lastIndex = 0;\r\n\t\t\twhile (match = defaultTagReg.exec(text)) {\r\n\t\t\t\t// 获取当前这一次匹配到{{}}开始的位置\r\n\t\t\t\tlet index = match.index;\r\n\t\t\t\tif (index - lastIndex > 0) {\r\n\t\t\t\t\ttokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n\t\t\t\t}\r\n\t\t\t\ttokens.push(`_s(${match[1].trim()})`)\r\n\t\t\t\t// 更新lastIndex 便于截取两个{{}}之间的字符 \r\n\t\t\t\tlastIndex = index + match[0].length;\r\n\t\t\t}\r\n\t\t\tif (lastIndex < text.length) {\r\n\t\t\t\ttokens.push(JSON.stringify(text.slice(lastIndex, text.length)));\r\n\t\t\t}\r\n\t\t\t// console.log('tokens', tokens);\r\n\t\t\treturn `_v(${tokens.join('+')})`\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nfunction generatorProps(attrs) {\r\n\tif (attrs.length === 0) return 'null'\r\n\r\n\tlet propsStr = '';\r\n\tfor (let attr of attrs) {\r\n\t\tlet key = attr.name;\r\n\t\tlet value = attr.value;\r\n\r\n\t\t// 当属性的key是style的时候 需要特殊处理value为对象\r\n\t\tif (key === 'style') {\r\n\t\t\tlet styleObj = {};\r\n\r\n\t\t\tif (value[value.length - 1] === ';') {\r\n\t\t\t\tvalue = value.slice(0, -1);\r\n\t\t\t}\r\n\r\n\t\t\tvalue.split(';').forEach(item => {\r\n\t\t\t\tlet [k, v] = item.split(':');\r\n\t\t\t\tstyleObj[k] = v;\r\n\t\t\t})\r\n\t\t\tvalue = styleObj;\r\n\t\t}\r\n\r\n\t\t// 不同属性间用逗号隔开 id:100,name:'lilei'\r\n\t\tpropsStr += `${key}:${JSON.stringify(value)},`;\r\n\t}\r\n\t// 循环结束之后末尾会多一个逗号,\r\n\treturn `{${propsStr.slice(0,-1)}}`;\r\n}\n","import Watcher from '../observer/watcher.js';\r\n\r\n/**\r\n * 组件挂载流程\r\n * @param {Object} vm 挂载组件所需的Vue实例对象\r\n * @param {Object} el 组件所在的DOM元素对象\r\n */\r\nexport function mountComponent(vm, el) {\r\n\r\n\t/**\r\n\t * 1. 调用render方法产生虚拟节点 -虚拟DOM => vm._render()\r\n\t * 2. 根据虚拟DOM生成真实DOM \r\n\t * 3. 用新的真实DOM替换el DOM元素\r\n\t */\r\n\r\n\tvm.$el = el; // 方便在实例调用_update的时候直接通过$el属性取值\r\n\r\n\r\n\t// 定义渲染逻辑函数 每次执行这个函数就会对组件进行重新渲染\r\n\tlet updateComponent = ()=>{\r\n\t\tvm._update(vm._render());\r\n\t}\r\n\t\r\n\t// 创建watcher new的过程就是渲染视图的过程\r\n\tlet watcher = new Watcher(vm,updateComponent,{renderWatcher:true});\r\n\tconsole.log('watcher',watcher)\r\n\t\r\n}\n","// 策略对象 \r\nconst strats = {};\r\n\r\n// 一个个具体的策略\r\nconst LIFECYCLE = [\r\n\t\"beforeCreate\",\r\n\t\"created\",\r\n\t\"beforeMount\",\r\n\t\"mounted\",\r\n\t\"beforeUpdate\",\r\n\t\"updated\",\r\n\t\"beforeDestroy\",\r\n\t\"destroyed\",\r\n];\r\n\r\n// 创建一个个的策略 这意味着key为生命周期的值肯定是一个数组\r\nfunction makeStrats(stratsList){\r\n\tstratsList.forEach(hook => {\r\n\t\tstrats[hook] = function(oldValue, newValue) {\r\n\t\t\tif(newValue){\r\n\t\t\t\tif(oldValue){\r\n\t\t\t\t\treturn oldValue.concat(newValue); // 新旧都有 合并在一个数组中\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn [newValue]; // 新传入的属性值存在 旧的不存在 就新的包装在数组中\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\treturn oldValue; // 只有旧对象没有新对象直接用旧对象的key的值\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nmakeStrats(LIFECYCLE);\r\n\r\nexport default strats;","import strats from './strats.js'\r\n\r\n/**\r\n * @param {Object} oldOptions 当前的Vue.options对象\r\n * @param {Object} newOptions Vue.mixin调用时传入的新的options\r\n * 此方法不同于普通的对象之前的合并，比如：\r\n * let oldOptions = {};  let newOptions = {created:100};\r\n * 1. 要求将合并的结果要保存在oldOptions对象中\r\n * 2. 要求将key对应的值在合并之后放在数组队列中维护起来：\r\n * \r\n * 比如上面例子合并之后的结果就是:oldOptions = {created:[100]}，再次进行合并：\r\n * let oldOptions = {created:[100]};  let newOptions = {created:200};\r\n * 合并结果为：oldOptions = {created:[100,200]}\r\n * \r\n * 总的来说就是：新旧对象中相同key的要依次按照合并的顺序维护在一个数组队列中，并且将合并的结果赋值给原来的旧的对象本身，也就是Vue.options对象。\r\n */\r\nexport function mergeOptions(oldOptions, newOptions) {\r\n\tconst resOptions = {};\r\n\r\n\t// 先循环老的对象\r\n\tfor (let key in oldOptions) {\r\n\t\tmergeField(key); // 合并要合并的字段\r\n\t}\r\n\r\n\t// 再循环传入的对象\r\n\tfor (let key in newOptions) {\r\n\t\t// 父对象合并过的字段就不重复合并了\r\n\t\tif (!oldOptions.hasOwnProperty(key)) {\r\n\t\t\tmergeField(key); // 合并要合并的字段\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction mergeField(key) {\r\n\t\t// 策略模式减少if - else 避免写很多if条件\r\n\t\tif (strats[key]) {\r\n\t\t\t// 有策略优先走策略 说明我定义好了如何处理的策略\r\n\t\t\tresOptions[key] = strats[key](oldOptions[key], newOptions[key]);\r\n\t\t} else {\r\n\t\t\t// 如果没有策略那么以传入的新的渲染中key的值为主\r\n\t\t\tresOptions[key] = newOptions[key] || oldOptions[key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn resOptions;\r\n}","import {\r\n\tinitState\r\n} from './initState.js';\r\n\r\nimport {\r\n\tcompileToFunction\r\n} from '../template-compiler/index.js'\r\n\r\nimport {\r\n\tmountComponent\r\n} from '../lifecycle/index.js'\r\n\r\nimport {\r\n\tmergeOptions\r\n} from '../globalApi/mergeOptions.js';\r\n\r\n\r\nexport function initMixin(Vue) {\r\n\t/* 在这里给Vue原型拓展方法 */\r\n\tVue.prototype._init = function(options) {\r\n\r\n\t\t// 给生成的实例上挂载$options用于在其他地方获取用户传入的配置\r\n\t\tlet vm = this;\r\n\t\t\r\n\t\t/**\r\n\t\t * options是用户传入的配置项\r\n\t\t * this.constructor.options是全局Vue上的静态options对象\r\n\t\t * \r\n\t\t * Vue.mixin的作用就是将全局的配置项合并成为一个对象，将相同key的值放入一个数组中\r\n\t\t * Vue的实例在初始化的时候会再次将用户自己传入的配置项和之前全局的配置对象二次进行合并\r\n\t\t * 这样做的好处是我们定义的全局的filter、指令、组件component等最终都会挂载到每一个Vue的实例上\r\n\t\t * 供Vue的实例this进行调用 这就是为什么全局的过滤器、组件在任意地方都可以访问调用的原因\r\n\t\t * 这也是为什么全局的生命周期函数总是在实例之前调用的原因\r\n\t\t */\r\n\t\tvm.$options = mergeOptions(this.constructor.options,options);\r\n\r\n\t\t// data未初始化前调用beforeCreate生命周期函数\r\n\t\tcallHook(vm,'beforeCreate');\r\n\r\n\t\t// 开始初始化options中的各个状态 data - props - methods...\r\n\t\tinitState(vm);\r\n\t\t\r\n\t\t// data初始化完成之后调用created生命周期函数\r\n\t\tcallHook(vm,'created');\r\n\r\n\t\t// 如果用户传入了el属性 就使用$mount进行挂载\r\n\t\tif (options.el) {\r\n\t\t\t// 未挂载到DOM上前调用beforeMount生命周期函数\r\n\t\t\tcallHook(vm,'beforeMount');\r\n\t\t\t\r\n\t\t\tvm.$mount(options.el);\r\n\t\t\t\r\n\t\t\t// DOM挂载完成调用mounted生命周期函数\r\n\t\t\tcallHook(vm,'mounted');\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tVue.prototype.$mount = function(el) {\r\n\t\tlet vm = this;\r\n\t\t\r\n\t\tlet options = vm.$options;\r\n\t\tlet element = document.querySelector(el);\r\n\r\n\t\t/* 编译模板优先级 render - template - el */\r\n\t\tif (!options.render) {\r\n\t\t\tlet template;\r\n\t\t\t// 如果没有传递template属性但是有element\r\n\t\t\tif (!options.template && element) {\r\n\t\t\t\ttemplate = element.outerHTML;\r\n\t\t\t} else {\r\n\t\t\t\t// 如果template属性和element属性都有 这里的判断没有考虑太完全\r\n\t\t\t\ttemplate = options.template;\r\n\t\t\t}\r\n\t\t\t// 获取到模板template 就需要对模板进行编译 输入template 输出render函数\r\n\t\t\tif (template) {\r\n\t\t\t\tconst render = compileToFunction(template);\r\n\t\t\t\toptions.render = render;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 组件的挂载：将实例vm对象挂载到DOM元素el上面\r\n\t\t// vm.$options中可以获取前面生成的render函数\r\n\t\tmountComponent(vm, element);\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Object} vm Vue实例\r\n * @param {Object} hook 要执行的生命周期函数名称\r\n * 发布订阅模式应用：在策略模式处一一进行订阅，在这里进行发布\r\n */\r\nexport function callHook(vm,hook){\r\n\t// 这里取到的和实例配置项合并之后的hook 应该是一个数组\r\n\tlet handlers = vm.$options[hook];\r\n\t\r\n\tif(Array.isArray(handlers)){\r\n\t\thandlers.forEach(hook=>{\r\n\t\t\t// 所有生命周期函数的this都是实例本身\r\n\t\t\thook.call(vm)\r\n\t\t})\r\n\t}\r\n\t\r\n}\n","\r\n/**\r\n * 创建虚拟DOM 元素节点\r\n * h方法和_c都是这个方法\r\n */\r\nexport function createElementVNode(vm,tag,data,...children){\r\n\tif(data == null) {\r\n\t\tdata = {};\r\n\t}\r\n\tlet key = data.key;\r\n\tif(key){\r\n\t\tdelete data.key;\r\n\t}\r\n\treturn createVNode(vm,tag,key,data,children)\r\n}\r\n\r\n\r\n/**\r\n * 创建虚拟DOM 文本节点\r\n * _v就是这个方法\r\n */\r\nexport function createTextVNode(vm,text,props={},...children){\r\n\treturn createVNode(vm,null,null,null,null,text)\r\n}\r\n\r\n/**\r\n * 1.描述的是语法还是DOM \r\n * 2. 能不能在过程中自定义新的内容进去\r\n * 3. react 把JSX转化为AST Vue是吧template转化为AST 都是语法层面的转化\r\n * \r\n * AST做的是将HTML模板转化为一颗JS树的对象，做的是语法层面的转化，不能放自定义的属性，html标签是什么样子就转化为什么样，AST还可以描述css、es6语法、jsx等，描述的是语言本身\r\n * \r\n * \r\n * 虚拟DOM做的是描述DOM元素，可以增加一些自定义的属性，比如vm属性，插槽，指令等，核心是更加好的描述DOM元素\r\n * @param {Object} vm\r\n * @param {Object} tag\r\n * @param {Object} key\r\n * @param {Object} props\r\n * @param {Object} children\r\n * @param {Object} text\r\n * \r\n */\r\nfunction createVNode(vm,tag,key,data,children,text){\r\n\treturn {\r\n\t\tvm,\r\n\t\ttag,\r\n\t\tkey,\r\n\t\tdata,\r\n\t\tchildren,\r\n\t\ttext\r\n\t}\r\n}\r\n\r\n","import {createElementVNode,createTextVNode} from '../vNode/index.js'\r\n\r\n/**\r\n * 1. 初始化渲染\r\n * 2. 异步更新diff算法\r\n * patch是更新的意思\r\n */\r\nfunction patch(oldVNode,VNode){\r\n\t// 如果oldVNode是一个真实的DOM元素 那么代表传递进来的是要挂载的DOM节点 是初始化渲染\r\n\tlet isRealDomElement = oldVNode.nodeType;\r\n\tif(isRealDomElement){\r\n\t\t// 开始初始化渲染\r\n\t\t\r\n\t\t// 1.基于VNode虚拟DOM创建真实DOM元素\r\n\t\tlet newElement = createElement(VNode);\r\n\t\tconsole.log('newElement',newElement)\r\n\t\t\r\n\t\t// 2.新节点newElement替换老节点el 也是有讲究的\r\n\t\t// 假设要将A节点的内容替换为B节点的，需要先将B插入到A的下一个兄弟节点位置，然后移除A节点；而不能直接先将A移除，然后找到A的父元素appendChild，这样会插入到A的父元素的末尾去，导致前后节点位置发生变化\r\n\t\tlet parentNode = oldVNode.parentNode;\r\n\t\tparentNode.insertBefore(newElement,oldVNode.nextSibling)\r\n\t\tparentNode.removeChild(oldVNode);\r\n\t\t\r\n\t\t// 3. 返回新的DOM\r\n\t\treturn newElement;\r\n\t\t\r\n\t}else{\r\n\t\t// 开始diff算法对比\r\n\t\t\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Object} VNode\r\n * 根据虚拟DOM节点创建真实DOM节点\r\n * 这个真实的DOM节点就是最终要替代传入的el节点的元素节点\r\n */\r\nfunction createElement(VNode){\r\n\tlet {tag,data,children,text} = VNode;\r\n\t// 在_render方法生成虚拟DOM节点的时候设置了如果tag是一个字符串，那么就是元素节点；如果是null就是文本节点\r\n\tif(typeof tag === 'string'){\r\n\t\t// 将虚拟DOM和新建的真实DOM联系起来\r\n\t\tVNode.el = document.createElement(tag);\r\n\t\t// 给新DOM节点的属性赋值\r\n\t\tpatchProps(data,VNode.el)\r\n\t\t// 给新DOM节点的children赋值\r\n\t\tchildren.forEach(child=>{\r\n\t\t\tVNode.el.appendChild(createElement(child));\r\n\t\t})\r\n\t}else {\r\n\t\t// 创建文本节点\r\n\t\tVNode.el = document.createTextNode(text);\r\n\t}\r\n\t\r\n\treturn VNode.el;\r\n}\r\n\r\n/**\r\n * @param {Object} props 属性组成的对象\r\n * @param {Object} el 当前属性要挂载的元素节点\r\n * props:{ id:'app',style:{ color:red}}\r\n */\r\nfunction patchProps(props,el){\r\n\tfor(let key in props){\r\n\t\tif(key === 'style'){\r\n\t\t\t// 再次从style对象中取值 给el的style赋值\r\n\t\t\tfor (let styleProp in props.style) {\r\n\t\t\t\tel.style[styleProp] = props.style[styleProp];\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tel.setAttribute(key,props[key]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport function initLifeCycle(Vue){\r\n\t\r\n\t/* 渲染虚拟DOM */\r\n\tVue.prototype._render = function(){\r\n\t\tconst vm = this;\r\n\t\t// 让with里面的this指向vm实例，就可以去实例中取值\r\n\t\t// 这一步就可以将属性和视图进行挂钩\r\n\t\treturn vm.$options.render.call(vm);\r\n\t}\r\n\t\r\n\t// 生成元素节点\r\n\tVue.prototype._c = function(){\r\n\t\treturn createElementVNode(this,...arguments);\r\n\t}\r\n\t\r\n\t// 生成文本节点\r\n\tVue.prototype._v = function(){\r\n\t\treturn createTextVNode(this,...arguments);\r\n\t}\r\n\t\r\n\t// 转义字符串\r\n\tVue.prototype._s = function(value){\r\n\t\t// 不是对象类型的话 没必要转义\r\n\t\tif(typeof value !== 'object') return value;\r\n\t\treturn JSON.stringify(value);\r\n\t}\r\n\t\r\n\t\r\n\t/* 转化真实DOM */\r\n\tVue.prototype._update = function(vNode){\r\n\t\t\r\n\t\tconst vm = this;\r\n\t\tconst el = vm.$el; // 此el是querySelector获取到的dom元素对象，不是new Vue时传入的选择符字符串'#app'\r\n\t\t\r\n\t\tconsole.log('执行render函数返回的虚拟节点',vNode);\r\n\t\tconsole.log('要挂载的真实DOM节点',el);\r\n\t\t\r\n\t\t/**\r\n\t\t * Vue2.0和Vue3.0\r\n\t\t * patch既有初始化的功能，又有更新视图的功能\r\n\t\t * 将虚拟DOM转化为真实DOM\r\n\t\t * \r\n\t\t * 用vNode创建真实DOM节点，然后替换到原来的el元素节点\r\n\t\t * 并将patch后的返回值也就是新的真实DOM节点赋值给实例的$el属性\r\n\t\t * 为了下一次更新的时候老的el就是上一次生成的真实DOM节点\r\n\t\t */\r\n\t\tvm.$el = patch(el,vNode);\r\n\t}\r\n}","import {\r\n\tnextTick\r\n} from '../observer/nextTick.js';\r\nimport {\r\n\tmergeOptions\r\n} from './mergeOptions.js';\r\n\r\n\r\n\r\nexport function initGlobalApi(Vue){\r\n\t// 原型挂载核心API\r\n\tVue.prototype.$nextTick = nextTick;\r\n\t\r\n\t/* Vue类的静态全局配置对象 */\r\n\tVue.options = {};\r\n\t\r\n\t/**\r\n\t * 调用 一次mixin，就把选项中的created取出来挂到Vue.options的created数组\r\n\t * \r\n\t * 将全局的Vue.options对象和用户传入的mixinOptions进行合并\r\n\t * 合并完成之后将结果赋值给全局Vue.options对象对应的key的数组上\r\n\t * @param {Object} mixinOptions\r\n\t */\r\n\tVue.mixin = function(mixinOptions) {\r\n\t\t// this === Vue\t\r\n\t\tthis.options = mergeOptions(this.options, mixinOptions);\r\n\t\t// console.log(this.options);\r\n\t\treturn this; // 方便链式调用\r\n\t}\r\n}","/* 打包入口文件 */\r\nimport {\r\n\tinitMixin\r\n} from './init/init.js';\r\n\r\nimport {\r\n\tinitLifeCycle\r\n} from './lifecycle/initLifeCycle.js'\r\n\r\nimport {\r\n\tinitGlobalApi\r\n} from './globalApi/index.js';\r\n\r\n// Vue构造函数\r\nfunction Vue(options) {\r\n\tthis._init(options);\r\n}\r\n\r\n\r\n// 给Vue类拓展初始化options的方法\r\ninitMixin(Vue);\r\n\r\n// 模板编译 组件挂载\r\ninitLifeCycle(Vue);\r\n\r\n// 初始化全局API\r\ninitGlobalApi(Vue);\r\n\r\n\r\nexport default Vue;\n"],"names":["id","Dep","subs","target","addDep","watcher","push","forEach","update","stack","pushTarget","popTarget","pop","length","observe","data","__ob__","Observer","Object","defineProperty","value","enumrable","configurable","Array","isArray","newArrayProto","createNewArrayProto","__proto__","observeArray","walk","keys","key","defineReactive","item","dep","get","console","log","depend","set","newValue","notify","oldArrayProto","prototype","create","methods","method","args","result","call","inserted","slice","proxy","vm","initData","$options","_data","timerFunction","getTimerFn","fn","Promise","resolve","then","flashCallBacks","MutationObserver","mutationOb","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","flushCallBacks","callBacks","waiting","cb","nextTick","callback","Watcher","options","getter","renderWatcher","deps","depsId","Set","lazy","dirty","depLen","depId","has","add","addSub","queneWatcher","quene","memo","pending","watcherId","flushSchedulerQuene","flushWatcherQuene","run","initComputed","computed","watchers","_computedWatchers","userDefine","defineComputed","setter","createComputedGetter","computedWatcher","evaluate","initState","props","initProps","initMethods","watch","initWatch","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","attribute","defaultTagReg","ELEMENT_TYPE","TEXT_TYPE","parseHTML","htmlStr","currentParent","root","createASTElement","tag","attrs","type","parent","children","start","tagName","astNode","end","error","chars","text","replace","advance","n","parseStartTag","match","attrResult","endResult","name","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","ast","code","codeGenerator","render","Function","childrenCode","generatorChildren","generatorProps","map","child","generatorChild","join","test","JSON","stringify","tokens","lastIndex","exec","index","trim","propsStr","attr","styleObj","split","k","v","mountComponent","el","$el","updateComponent","_update","_render","strats","LIFECYCLE","makeStrats","stratsList","hook","oldValue","concat","mergeOptions","oldOptions","newOptions","resOptions","mergeField","hasOwnProperty","initMixin","Vue","_init","constructor","callHook","$mount","element","querySelector","outerHTML","handlers","createElementVNode","createVNode","createTextVNode","patch","oldVNode","VNode","isRealDomElement","nodeType","newElement","createElement","parentNode","insertBefore","nextSibling","removeChild","patchProps","appendChild","styleProp","style","setAttribute","initLifeCycle","_c","arguments","_v","_s","vNode","initGlobalApi","$nextTick","mixin","mixinOptions"],"mappings":"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"}